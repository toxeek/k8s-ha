---
- hosts: control1
  become: yes
  tasks:
    - name: initialise the cluster
      shell: kubeadm init --control-plane-endpoint="{{ VIRTUAL_IP }}:{{ K8S_API_SERVER_PORT }}" --upload-certs --apiserver-advertise-address={{ IP_HOST_CP1 }} --pod-network-cidr=192.168.0.0/16
      register: cluster_initialized

    - debug: msg="{{ cluster_initialized.stdout }}"
    - debug: msg="{{ IP_HOST_CP1 }}"
    - debug: msg="{{ K8S_API_SERVER_PORT }}"

    - name: create .kube directory
      become: yes
      become_user: tricky
      file:
        path: /home/tricky/.kube
        state: directory
        mode: 0755

    - name: copy admin.conf to user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/tricky/.kube/config
        remote_src: yes
        owner: tricky

    - name: get join command
      shell: kubeadm token create --print-join-command
      register: join_command_raw

    - name: set join command
      set_fact:
        join_command: "{{ join_command_raw.stdout_lines[0] }}"

    - name: get cert
      shell: kubeadm init phase upload-certs --upload-certs
      register: get_cert_raw

    - name: set cert
      set_fact:
        cert_command: "{{ get_cert_raw.stdout_lines[2] }}"

    - name: install Pod network (CNI)
      become: yes
      shell: kubectl --kubeconfig=/etc/kubernetes/admin.conf create -f https://raw.githubusercontent.com/projectcalico/calico/{{ VERSION_CALICO }}/manifests/calico.yaml
      args:
        chdir: $HOME
        creates: pod_network_setup.txt

- hosts: control2,control3
  become: yes
  tasks:
    - debug: msg="{{ hostvars['control1'].cert_command }}"
    - debug: msg="{{ ansible_eth1.ipv4.address }}"

    - name: join control-plane
      shell: "{{ hostvars['control1'].join_command }} --control-plane --certificate-key={{ hostvars['control1'].cert_command }} --apiserver-advertise-address={{ ansible_eth1.ipv4.address|default(ansible_all_ipv4_addresses[0]) }} >> node_joined.txt"
      register: node_joined

- hosts: control_plane
  become: yes
  tasks:
    - name: create .kube directory
      become: yes
      become_user: tricky
      file:
        path: /home/tricky/.kube
        state: directory
        mode: 0755

    - name: copy admin.conf to user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/tricky/.kube/config
        remote_src: yes
        owner: tricky

