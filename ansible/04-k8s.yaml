---
- hosts: control_plane,workers
  become: yes
  tasks:
    - name: Disable swap
      become: yes
      shell: swapoff -a

    - name: Disable SWAP in fstab since kubernetes can't work with swap enabled
      replace:
        path: /etc/fstab
        regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
        replace: '# \1'

    - name: Disable firewall
      when: ansible_facts['os_family'] == "Debian"
      shell: |
        STATUS="$(systemctl is-active ufw.service)"
        if [ "${STATUS}" = "active" ]; then
          systemctl stop --now ufw >/dev/null 2>&1
          systemctl disable --now ufw >/dev/null 2>&1
        fi

    - name: bridge network
      copy:
        dest: "/etc/modules-load.d/containerd.conf"
        content: |
          overlay
          br_netfilter

    - name: forward ipv4 traffic
      copy:
        dest: "/etc/sysctl.d/kubernetes.conf"
        content: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward                 = 1

    - name: apply bridge network
      become: yes
      shell: modprobe overlay && modprobe br_netfilter && sysctl --system

    - name: For releases older than Debian 12 and Ubuntu /etc/apt/keyrings/docker.gpg22.04
      become: yes
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: 0755

    - name: Apt-key for containerd.io [1/2]
      become: yes
      shell: |
        rm -f /etc/apt/keyrings/docker.gpg
        curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

    - name: Add containerd.io repository [2/2]
      become: yes
      shell: |
        echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
          $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

    - name: Install container runtime (CRI)
      apt:
        name:
          - containerd.io
        state: present
        update_cache: true

    - name: Tell containerd to use systemd
      shell: |
        mkdir -p /etc/containerd && \
        containerd config default > /etc/containerd/config.toml && \
        sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml

    - name: containerd service
      ansible.builtin.systemd:
        state: restarted
        name: containerd

    - name: add Kubernetes apt-key
      become: yes
      shell: |
        echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v{{ K8S_VERSION | regex_search('(\d\.\d+)') }}/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list

    - name: add Kubernetes' APT repository
      become: yes
      shell: |
        rm -f /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v{{ K8S_VERSION | regex_search('(\d\.\d+)') }}/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: update repo
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

    - debug: msg={{ K8S_VERSION }}

    - name: install kubelet
      apt:
        name: kubelet={{ K8S_VERSION }}
        state: present
        update_cache: true

    - name: install kubeadm
      apt:
        name: kubeadm={{ K8S_VERSION }}
        state: present
        update_cache: true

    - name: Hold versions
      shell: apt-mark hold kubelet={{ K8S_VERSION }} kubeadm={{ K8S_VERSION }}


- hosts: control_plane
  become: yes
  tasks:
    - name: install kubectl
      apt:
        name: kubectl={{ K8S_VERSION }}
        state: present
        update_cache: true
        allow_downgrade: true

    - name: Hold versions
      shell: apt-mark hold kubectl={{ K8S_VERSION }}

#    - name: Pre-download images
#      shell: kubeadm config images pull
